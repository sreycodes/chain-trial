{
  "version": 3,
  "sources": [
    "node_modules/browserify/node_modules/browser-pack/_prelude.js",
    "line-segments-intersect.js"
  ],
  "names": [],
  "mappings": "AAAA;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA",
  "file": "generated.js",
  "sourceRoot": "",
  "sourcesContent": [
    "(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})",
    "// line-segments-intersect.js \n// intersection point https://en.wikipedia.org/wiki/Line%E2%80%93line_intersection\n// line 1: x1,y1,x2,y2\n// line 2: x3,y3,x4,y4\n// for comparing the float number, fixing the number to int to required \n// precision\nfunction linesIntersect(x1,y1,x2,y2,x3,y3,x4,y4,precision) {\n  var intPt,x,y,result = false, \n    p = precision || 6,\n    denominator = (x1 - x2)*(y3 - y4) - (y1 -y2)*(x3 - x4);\n  if (denominator == 0) {\n    // check both segments are Coincident, we already know \n    // that these two are parallel \n    if (fix((y3 - y1)*(x2 - x1),p) == fix((y2 -y1)*(x3 - x1),p)) {\n      // second segment any end point lies on first segment\n      result = intPtOnSegment(x3,y3,x1,y1,x2,y2,p) ||\n        intPtOnSegment(x4,y4,x1,y1,x2,y2,p);\n    }\n  } else {\n    x = ((x1*y2 - y1*x2)*(x3 - x4) - (x1 - x2)*(x3*y4 - y3*x4))/denominator;\n    y = ((x1*y2 - y1*x2)*(y3 - y4) - (y1 - y2)*(x3*y4 - y3*x4))/denominator;\n    // check int point (x,y) lies on both segment \n    result = intPtOnSegment(x,y,x1,y1,x2,y2,p) \n      && intPtOnSegment(x,y,x3,y3,x4,y4,p);\n  }\n  return result;\n} \n\nfunction intPtOnSegment(x,y,x1,y1,x2,y2,p) {\n  return fix(Math.min(x1,x2),p) <= fix(x,p) && fix(x,p) <= fix(Math.max(x1,x2),p) \n    && fix(Math.min(y1,y2),p) <= fix(y,p) && fix(y,p) <= fix(Math.max(y1,y2),p); \n}\n\n// fix to the precision\nfunction fix(n,p) {\n  return parseInt(n * Math.pow(10,p));\n}\n\nmodule.exports = linesIntersect;\n"
  ]
}